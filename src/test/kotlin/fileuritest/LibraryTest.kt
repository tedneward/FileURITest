/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package fileuritest

import kotlin.test.Test
import kotlin.test.assertTrue

import java.io.File
import java.net.URI
import java.nio.file.Paths
import kotlin.io.*
import kotlin.test.*

class FileTests {
    @Test fun relativeFileTest() {
        val src = "code/console.js"
        val basepath = Paths.get("./src/test/resources/codeslide.xmlmd")
        val basedirpath = basepath.parent
        val srcfile = basedirpath.resolve(src).toFile()

        assertTrue(srcfile.isFile)
    }
    @Test fun fileURIRelativeFileTest() {
        val src = "code/console.js"
        val baseUri = Paths.get("./src/test/resources/codeslide.xmlmd").toUri()
        assertTrue(baseUri.scheme == "file")

        val basepath = Paths.get(baseUri)
        val basedirpath = basepath.parent
        val srcfile = basedirpath.resolve(src).toFile()

        assertTrue(srcfile.isFile)
    }
    @Test fun macOSFileAbsoluteURITest() {
        val src = "code/console.js"
        val baseUri = "file:/Users/tedneward/Projects/FileURITest/src/test/resources/codeslide.xmlmd"

        val basepath = Paths.get(baseUri)
        val basedirpath = basepath.parent
        val srcfile = basedirpath.resolve(src).toFile()
        println("srcfile = $srcfile")
        println("srcfile.absolutePath = ${srcfile.absolutePath}")

//        assertTrue(srcfile.isFile)
    }
    @Test fun macOSFileRelativeURITest() {
        val src = "code/console.js"
        val baseUri = "file:/./src/test/resources/codeslide.xmlmd"

        val basepath = Paths.get(baseUri)
        val basedirpath = basepath.parent
        val srcfile = basedirpath.resolve(src).toFile()
        println("srcfile = $srcfile")
        println("srcfile.absolutePath = ${srcfile.absolutePath}")

//        assertTrue(srcfile.isFile)
    }
    @Test fun URIcreate() {
        val src = "code/console.js"
        val baseUri = URI.create("file:/./src/test/resources/codeslide.xmld")
        val basepath = Paths.get(baseUri)
        val basedirpath = basepath.parent
        val srcfile = basedirpath.resolve(src).toFile()
        println("srcfile = $srcfile")
        println("srcfile.absolutePath = ${srcfile.absolutePath}")

//        assertTrue(srcfile.isFile)
    }
}
